							//// AVR Atmega8 ////				

Регистры портов:
	1)DDRxn -- определение порта где x - буква порта(какой порт), а n - номер порта
			например DDRC3. 0 - ВХОД / 1 - ВЫХОД ---> PORTxn (0 - высокое входное напряжение
			1 - подтягивающий резистор)
			
	2)PORTxn -- подаем высокий уровень сигнала на пин(запись данных)PORTxn 
				(0 - высокое входное напряжение
				1 - подтягивающий резистор)

	3)PINx -- считывание данных. 0 - низкий входной сигнал, 1 - высокий входной сигнал
	
	
Комманды:
	1)_delay_ms() - задержка программы на установленное кол-во милисек.
				  подключается команда библиотекой <util/delay.h>


Объявления:
	1)#define -- такой командой можно объявить что-то своё, например
			  #define three 3
			  
	2)#define F_CPU 1000000UL -- объявляем, что МК будет работать на
			частоте 1Мгц
			
			
Логические операции:
	1) >> -- сдвиг битов в право. PORTD = 0b00000110;  PORTD = PORTD >> 1; 
			(соответственно все единицы сдвинутся впрово на 1 (0b00000011))
			
	2) << -- запись бита в регистр например PORTD |= (1 << 3) - это значит
			записать единицу в 3 регистр, а все остальные регистры свободны 
			для других операций
			
			(обе комманды аналогичные)

	3)	| -- побитовое или. работает как обычный элемент или (01110001 | 00001101 = 01111101)
	
	4)	& -- логическое И. работает как обычный элемент И (00110110 & 01010010 = 00010010)
	
	5)	^ -- исключающая ИЛИ. выполняет сравнение двух бит и если один бит, НО НЕ ОБА !!!! 
			будет истинным, то он запишит единицу (00110110 ^ 01010010 = 01100100)
			
	6)	~ -- инверсия. применяя эту комманду происходит смена битов на противоположные
			(~0 = 1)
			
Логические конструкции : 

	1)	PORTВ |= (1 << 3) | (1 << 5) -- такая конструкция позволяет добавить еденицу в уже
										установленную матрицу
		
	2)	PORTD &= ~(1 << 4); -- такая конструкция позволяет обнулить бит в заданной матрице
		

Таймеры:	

			Для начала инициализируем таймер

			Timer Counter Control Register 

			НУЛЕВОЙ 8-БИТНЫЙ ТАЙМЕР (всего их 3 в Atmega8)
			
			следующий синтаксис: 
				TCCR0 = 0b00000xxx

			000 -- таймер остановлен
			001 -- таймер запущен без предделителя 
			010 -- таймер запущен с предделителем 8
			011 -- таймер запущен с предделителем 64
			100 -- таймер запущен с предделителем 256
			101 -- таймер запущен с предделителем 1024
			110 -- тактирование будет происходить от внешнего источника(подключить внешний генератор 
				   и единица будет записываться только при падении сигнала)
			111 -- тоже самое что и выше, но при подъеме сигнала

			Далее необходимо обнулить значение счетного таймера

			Timer Counter register -- TCNT0 8-битный регистер в который после 
			каждого определенного промежутка времени будет записываться 
			единица рекомендуется его обнулить перед началом

			Длительность каждого такта расчитываем по формуле:
			частота МК/предделитель (1000000/1024 = 977 Гц)
			Далее узнаем время 1/977 = 0,001 мс
			т.е. каждые 0,001 мс в регистр TCNT0 будет записываться единица